; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+c o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Connecting ...
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS: 
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉user꞉>  ; Use `alt+enter` to evaluate
()
clj꞉core.fsm꞉> 
({:when :busy, :allowed-triggers [{:permit :close, :then :closed}]})
clj꞉core.fsm꞉> 
1
clj꞉core.fsm꞉> 
#'core.fsm/triggers-for-state
clj꞉core.fsm꞉> 
2
clj꞉core.fsm꞉> 
{:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
{:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/triggers-for-state (REPL:12).
; null
clj꞉core.fsm꞉> 
#'core.fsm/triggers-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
:busy
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/triggers-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
({:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]})
clj꞉core.fsm꞉> 
({:when :busy, :allowed-triggers [{:permit :close, :then :closed}]})
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
{:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
{:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/eval1802 (REPL:24).
; null
clj꞉core.fsm꞉> 
0
clj꞉core.fsm꞉> 
0
clj꞉core.fsm꞉> 
0
clj꞉core.fsm꞉> 
{:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/ff
clj꞉core.fsm꞉> 
1
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/eval1812 (REPL:28).
; null
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
2
clj꞉core.fsm꞉> 
1
clj꞉core.fsm꞉> 
[1 2]
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
(({:when :busy, :allowed-triggers [{:permit :close, :then :closed}]}))
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
({:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]})
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
; Execution error (ClassCastException) at core.fsm/rule-for-state (REPL:13).
; class clojure.lang.LazySeq cannot be cast to class clojure.lang.IFn (clojure.lang.LazySeq and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/rule-for-state (REPL:12).
; null
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (ExceptionInfo) at core.fsm/rule-for-state (REPL:14).
; no rule or incorrect configuration
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
; Execution error (ExceptionInfo) at core.fsm/rule-for-state (REPL:16).
; No rule or incorrect configuration
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
#'core.fsm/trigger-for-rule
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/eval2013 (REPL:33).
; Wrong number of args (1) passed to: core.fsm/trigger-for-rule
clj꞉core.fsm꞉> 
({:permit :start, :then :busy})
clj꞉core.fsm꞉> 
()
clj꞉core.fsm꞉> 
({:permit :start, :then :busy})
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (ExceptionInfo) at core.fsm/rule-for-state (REPL:17).
; No rule or incorrect configuration
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/trigger-for-rule
clj꞉core.fsm꞉> 
#'core.fsm/trigger-for-rule
clj꞉core.fsm꞉> 
{:permit :start, :then :busy}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/trigger-for-rule (REPL:21).
; null
clj꞉core.fsm꞉> 
{:permit :start, :then :busy}
clj꞉core.fsm꞉> 
#'core.fsm/rule-for-state
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/rule-for-state (REPL:13).
; null
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/trigger (REPL:19).
; Wrong number of args (1) passed to: core.fsm/rule-for-state
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/eval2094 (REPL:24).
; Wrong number of args (4) passed to: core.fsm/trigger
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/trigger (REPL:19).
; Wrong number of args (1) passed to: core.fsm/rule-for-state
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:when :open, :allowed-triggers [{:permit :start, :then :busy} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/trigger-for-rule
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:permit :start, :then :busy}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
; Syntax error compiling at (core.clj:21:3).
; Unable to resolve symbol: find-transition in this context
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
#'core.fsm/find-transition
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:permit :start, :run #object[core.fsm$fn__2239 0x38f286f7 "core.fsm$fn__2239@38f286f7"], :then :busy}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:permit :start, :run #object[core.fsm$fn__2239 0x38f286f7 "core.fsm$fn__2239@38f286f7"], :then :busy}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:permit :start, :then :busy}
clj꞉core.fsm꞉> 
:busy
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:state nil}
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
{:state nil, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
:busy
clj꞉core.fsm꞉> 
:closed
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/find-transition (REPL:18).
; null
clj꞉core.fsm꞉> 
:closed
clj꞉core.fsm꞉> 
:busy
clj꞉core.fsm꞉> 
{:state nil, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/find-transition
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/trigger (REPL:26).
; Wrong number of args (2) passed to: core.fsm/find-transition
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
; Execution error (NullPointerException) at core.fsm/find-transition$fn (REPL:27).
; null
clj꞉core.fsm꞉> 
; Execution error (NullPointerException) at core.fsm/find-transition$fn (REPL:27).
; null
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
; Execution error (NullPointerException) at core.fsm/find-transition$fn (REPL:27).
; null
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/find-transition$fn (REPL:27).
; Wrong number of args (1) passed to: core.fsm/fn--2580
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
#'core.fsm/some-object
clj꞉core.fsm꞉> 
{:state :closed, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/find-transition (REPL:25).
; null
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :start, "name" "christ"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:when :open, :transitions [{:permit :start, :run #object[core.fsm$fn__2804 0x16a93b2a "core.fsm$fn__2804@16a93b2a"], :if #object[core.fsm$fn__2806 0x4f17908e "core.fsm$fn__2806@4f17908e"], :then :busy} {:permit :start, :run #object[core.fsm$fn__2808 0x25bc7d43 "core.fsm$fn__2808@25bc7d43"], :if #object[core.fsm$fn__2810 0x64ed01c8 "core.fsm$fn__2810@64ed01c8"], :then :start} {:permit :close, :if #object[core.fsm$fn__2812 0x3b420614 "core.fsm$fn__2812@3b420614"], :then :closed}]}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/find-transition
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
#'core.fsm/transition-matches
clj꞉core.fsm꞉> 
#'core.fsm/find-transition
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:when :open, :transitions [{:permit :start, :run #object[core.fsm$fn__3118 0x7d78f9e7 "core.fsm$fn__3118@7d78f9e7"], :if #object[core.fsm$fn__3120 0x5127da48 "core.fsm$fn__3120@5127da48"], :then :busy} {:permit :start, :run #object[core.fsm$fn__3122 0x32fe7059 "core.fsm$fn__3122@32fe7059"], :if #object[core.fsm$fn__3124 0x21a6eded "core.fsm$fn__3124@21a6eded"], :then :start} {:permit :close, :if #object[core.fsm$fn__3126 0x1bab9fff "core.fsm$fn__3126@1bab9fff"], :then :closed}]}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
; Execution error (NullPointerException) at core.fsm/transition-matches (REPL:26).
; null
clj꞉core.fsm꞉> 
#'core.fsm/add-predicate
clj꞉core.fsm꞉> 
{:if #object[core.fsm$add_predicate$fn__3221 0x70f87571 "core.fsm$add_predicate$fn__3221@70f87571"]}
clj꞉core.fsm꞉> 
{:if #object[core.fsm$eval3226$fn__3227 0x4978a5ff "core.fsm$eval3226$fn__3227@4978a5ff"]}
clj꞉core.fsm꞉> 
#'core.fsm/transition-matches
clj꞉core.fsm꞉> 
#'core.fsm/find-transition
clj꞉core.fsm꞉> 
{:state :closed, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:when :open, :transitions [{:permit :start, :run #object[core.fsm$fn__3265 0x3f2106c8 "core.fsm$fn__3265@3f2106c8"], :if #object[core.fsm$fn__3267 0x2482656b "core.fsm$fn__3267@2482656b"], :then :busy} {:permit :start, :run #object[core.fsm$fn__3269 0x582ea7ad "core.fsm$fn__3269@582ea7ad"], :if #object[core.fsm$fn__3271 0x6116a1c6 "core.fsm$fn__3271@6116a1c6"], :then :start} {:permit :close, :then :closed}]}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris"}
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "emma"}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :start, "name" "emma"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/add-predicate
clj꞉core.fsm꞉> 
#'core.fsm/add-predicate
clj꞉core.fsm꞉> 
#'core.fsm/add-runner
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
#'core.fsm/trigger
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :busy, "name" "chris", "surname" "baker"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris"}
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/rule-for-state (REPL:21).
; null
clj꞉core.fsm꞉> 
; Execution error (IndexOutOfBoundsException) at core.fsm/rule-for-state (REPL:21).
; null
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris", :outcome :success}
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
; Syntax error macroexpanding clojure.core/fn at (core.clj:19:32).
; "asd" - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
"asd" - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n] spec: :clojure.core.specs.alpha/params+body
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris", :outcome :success}
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
""
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:557).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
":start --> "
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
":start --> :busy"
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
; Execution error (ArityException) at core.fsm/eval4049 (REPL:23).
; Wrong number of args (1) passed to: core.fsm/dump
clj꞉core.fsm꞉> 
:start
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
:start
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
:start
clj꞉core.fsm꞉> 
; Syntax error compiling at (core.clj:21:3).
; Unable to resolve symbol: s in this context
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
":open --> :busy: :start"
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
":open --> busy : start"
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
"open --> busy : start"
clj꞉core.fsm꞉> 
#'core.fsm/sanitise-keyword
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
"OPEN --> BUSY : START"
clj꞉core.fsm꞉> 
#'core.fsm/sanitise
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
"OPEN --> BUSY : START"
clj꞉core.fsm꞉> 
#'core.fsm/dump-transition
clj꞉core.fsm꞉> 
#'core.fsm/dump-transition
clj꞉core.fsm꞉> 
"OPEN --> BUSY : START"
clj꞉core.fsm꞉> 
#'core.fsm/dump-rule
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(("OPEN --> BUSY : START" "OPEN --> START : CLOSE" "OPEN --> CLOSED : CLOSE") ("BUSY --> CLOSED : CLOSE"))
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
("OPEN --> BUSY : START" "OPEN --> START : CLOSE" "OPEN --> CLOSED : CLOSE" "BUSY --> CLOSED : CLOSE")
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
"OPEN --> BUSY : START,OPEN --> START : CLOSE,OPEN --> CLOSED : CLOSE,BUSY --> CLOSED : CLOSE"
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
"OPEN --> BUSY : START\nOPEN --> START : CLOSE\nOPEN --> CLOSED : CLOSE\nBUSY --> CLOSED : CLOSE"
clj꞉core.fsm꞉> 
OPEN --> BUSY : START
OPEN --> START : CLOSE
OPEN --> CLOSED : CLOSE
BUSY --> CLOSED : CLOSE
nil
clj꞉core.fsm꞉> 
; Syntax error macroexpanding clojure.core/ns at (core.clj:1:1).
; ((require (quote [clojure.string :as string]))) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
clj꞉core.fsm꞉> 
; Syntax error macroexpanding clojure.core/ns at (core.clj:1:1).
; ((require [clojure.string :as string])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
clj꞉core.fsm꞉> 
; Syntax error macroexpanding clojure.core/ns at (core.clj:1:1).
; ((require [clojure.string :as string])) - failed: Extra input spec: :clojure.core.specs.alpha/ns-form
clj꞉core.fsm꞉> 
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump-transition
clj꞉core.fsm꞉> 
#'core.fsm/sanitise
clj꞉core.fsm꞉> 
"OPEN --> BUSY : start"
clj꞉core.fsm꞉> 
#'core.fsm/dump-rule
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close
nil
clj꞉core.fsm꞉> 
OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close
nil
clj꞉core.fsm꞉> 
("``` mermaid" "stateDiagram-v2")
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(``` mermaid stateDiagram-v2 OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close)
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(``` mermaid stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close)
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(``` mermaid 
 stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close ```)
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(``` mermaid 
 stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> START : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close 
 ```)
nil
clj꞉core.fsm꞉> 
#'core.fsm/fsm
clj꞉core.fsm꞉> 
(``` mermaid 
 stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> OPEN : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close 
 ```)
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
``` mermaid
nil
clj꞉core.fsm꞉> 
#'core.fsm/dump
clj꞉core.fsm꞉> 
(``` mermaid 
 stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> OPEN : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close 
 ```)
nil
clj꞉core.fsm꞉> 
(``` mermaid 
 stateDiagram-v2 
 OPEN --> BUSY : start
OPEN --> OPEN : close
OPEN --> CLOSED : close
BUSY --> CLOSED : close 
 ```)
{:state :closed, "name" "chris", :outcome :success}
clj꞉core.fsm꞉> 
("``` mermaid" "\n" "stateDiagram-v2" "\n" "OPEN --> BUSY : start\nOPEN --> OPEN : close\nOPEN --> CLOSED : close\nBUSY --> CLOSED : close" "\n" "```")
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris", :outcome :success}
clj꞉core.fsm꞉> 
{:state :closed, "name" "chris", :outcome :success}
clj꞉core.fsm꞉> 
